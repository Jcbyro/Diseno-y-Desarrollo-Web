Selectores: 
    De identificador (ID): 
        #rojo{
            color: red;
        }
        <h2 id="rojo">Titulo</h2>
        <h2>Otro titulo</h2>
    De etiqueta:
        em{
            color: rgb(0, 255, 0);
        }
        <p>Hola a <em>todos</em></p>
        <p>Chau a <em>todos</em></p>
    De clase:
        .azul{
            color: #0000FF;
        }
        <p class="azul">parrafo</p>
        <p>Otro parrafo</p>
    Cascada, combinada o compuesta:
        div p em{
            color: red;
        }
        <div>
            <p>Hola a <em>todos</em><p>
        </div>
        <p>Chau a <em>todos</em></p>

El <style></style>: se pone dentro del head
<link rel="stylesheet" href="CSS.css">: tambien dentro del head

font-size: Tamaño del texto, se puede poner de manera numerica, pixeles, porcentajes, puntos, etc. La unidad de medida se debe poner pegada a su valor numerico sin dejar espacio
font-weight: Peso de la fuente (normal o bold)
font-style: Estilo de la fuente (normal o italic)
font-variant: Variante (normal o Small-Caps)
font-family: Estilo de lenguaje (Verdana, Arial, New Roman, Century Gothic)
text-decoration: Tipo de subrayado (underline, line-through, overline, none)
text-transform: Mayusculas/Minusculas (upppercase, lowercase, capitalize, none)
text-align: Alineacion del texto (left, right, center, justify)
text-indent: La tabulacion del texto (ej. Si pongo, 20px, la primera linea de cada parrafo se desplaza hacia la derecha 20 pixeles)
line-height: El tamaño de espacio entre cada parrafo (el valor optimo es 1.3 veces (30%))
color: Color del texto, se puede poner por su color en ingles, su valor hexadecimal o su rgb

Los links son los unicos elementos de HTML que no heredan el CSS, se puede modificar para que si le afecte
a: link{}: El vinculo a alguna pagina
a: hover{}: El puntero del mouse esta encima de el
a: active{}: Mientras el usuario mantiene el click
a: visited{}: El vinculo que ya fue visitado

Ej: a: link{
        color: blue;
    }
    a: link: hover{
        color: red;
    }

Las propiedades "margin, borden y padding" aceptan 1, 2 o 4 valores (separados por espacios); son llamadas shorthand
1 solo valor: Aplica el mismo valor a los 4 lados
2 valores: El primero afecta el top y botton. El segundo al left y right
4 valores: Espezando desde el top, se aplican en todos lados en sentido de la agujas del reloj (top, right, bottom, left)
Tambien existen propiedades con el nombre, ej. margin-top, estas solo aceptan un solo valor
Ej.:
p {padding: 20px;}  / 20 px en los 4 lados de la caja /
h1 {margin: 10px 30px;}  / Arriba y abajo, 10px; izquierda y derecha, 30 px /
div {padding: 10px 15px 0px 50px;}   / Arriba 10px, derecha 15px, abajo 0px, izquierda 50px /
div {
    padding-top: 10px;
    padding-right: 15px;
    padding-bottom: 0px;
    padding-left: 50px;
}

border-color: El color del borde, su valor se puede aplicar de la misma forma que color
border-width: El grosor del border, Valor numerico + unidad de medida
border-style: Tipo de borde a aplicar, ej. solid, dashed, dotted, double, inset, outset, ridge, groove, none, hidden
inset, outset, ridge, groove: (Hundido, salido, estriado, anclado 3D)
Tambien se pueden unir, de modo, "border-left-width", "border-bottom-style"

background-image: Archivo a usar como imagen de fondo, se aplica el valor url('ruta_al_archivo')
background-repeat: Si la imagen se repite y como lo hace. Valores; [repeat], no-repeat, repeat-x, repeat-y, round, space, ...
background-position: Recibe 2 valores de desplazamiento en x e y, separados por espacio, Ej. 0,0
background-attachment: Si existe scroll en la pagina (la parte a la derecha de todas las paginas), determina si se mantiene fija o se mueve con el scroll. Valores; [scroll], fixed
background: red; (aplica solo el color de fondo como background-color)
background: url("foto.jpg"); (aplica la imagen como background-image)
background: url("foto.jpg") no-repeat center center fixed green; (el orden de los valores es indistinto)

&nbsp; es como <br>:
&nbsp; Crea un espacio en blanco no rompible, es decir, un espacio que el navegador no ignorará al mostrar el contenido. Se usa comúnmente para crear espacios entre palabras o elementos que no deben ser comprimidos por el navegador. 

<br> es una etiqueta de salto de línea que se utiliza para forzar un salto de línea en el texto. Cuando el navegador encuentra <br>, insertará un salto de línea en el contenido, lo que hace que el texto siguiente comience en una nueva línea.

Usar multiples &nbsp; hace que se cree un espacion en blanco no rompible mas grande, no se puede usar (&nbsp*8)
&quot; es poner "
&quot;&quot; = ""

flex-flox es flex-direction y flex-wrap juntos
vh: viewport height, unidad de medida relativa a la altura de la ventana grafica, 100vh es el 100% de la altura

CSS Display:
display: inline. Transforma un bloque en linea, no inicia una nueva linea, no puede modificar width y height
display: block. Tranforma una linea en bloque, inicia una nueva linea, puede modificar width y height
display: inline-block. Combina las 2 anteriores, es una linea que puede modificar width y height

No se puede fucionar 2 margenes verticales, la unica forma es con vertical-align al tener 2 inline-block
Los valores de vertical-align son:
    baseline: Por defecto, el ultimo elemento de cada caja se apoya sobre la linea
    bottom: Alinea las partes inferiores de las cajas
    top: Alinea las partes superiores de las cajas
    middle: Alinea las cajas al centro dentro del alto de linea

Por defecto, las cajas inline-block tienen por defecto un espacio entre ellas, para eliminarlo se utiliza
en el HTML: <article>...</article><article>...</article>

display: none. Sirve para ocultar un elemento
display: flex. Establece un contenido flexible para los elementos hijos, permite un diseño mas flexible y dinamico en términos de alineación, distribución y reorganización de los elementos dentro del contenedor
display: grid. Establece un contenedor de cuadriculas que permite un diseño más complejo mediante la definición de filas y columnas, y la colocación de elementos en estas celdas

CSS Float:
float: Un elemento deja de pertenecer al flujo normal/natural del documento, transformandose de una caja de linea/bloque a un elemento flotanto con sus propias caracteristicas; esto permite que otros elementos fluyan alrededor de el
Valores de float: 
float: left;. EL elemento flota a la izquierda
right. El elemento flota a la derecha
none. El elemento no flota y se muestra en el flujo normal de la pagina
inherit.  El elemento hijo hereda el float de su elemento padre

clear: Especifica que debe pasar a un elemento que este al lado de un elemento flotante. Puede tener 5 valores:
clear: none;. Es el defaut, el elemento no es empujado debajo del elemento flotante
left. El elemento se empuja debajo de los elementos flotante a la izquierda
right. El elemento se empuja debajo de los elementos flotante a la derecha
both. El elemento se empuja debajo de los elementos flotante a la izquierda y derecha
inherit. El elemento hijo hereda el clear de su elemento padre

Clearfix Hak: 
Si un elemento flotante es mas grande que los elementos contenidos, no se vera lindo, se puede arreglar usando: 
.clearfix {
    overflow: auto;
}
La version mas moderna y util es: 
.clearfix::after {
    content: "";
    clear: both;
    display: table;
}

box-sizing. Define como el width y height es calculado, podria incluir padding y borders
overflow-x. Especifica que hacer con los ejes left/right si el contenido se desborda (overflow)
overflow-y. Especifica que hacer con los ejes top/bottom si el contenido se desborda (overflow)

